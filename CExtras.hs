-- GENERATED by C->Haskell Compiler, version 0.16.3 Crystal Seed, 24 Jan 2009 (Haskell)
-- Edit the ORIGNAL .chs file instead!


{-# LINE 1 "CExtras.chs" #-}{-# LANGUAGE ForeignFunctionInterface #-}

module CExtras where 

import Foreign.Ptr
import Foreign.C.Types
import Foreign.ForeignPtr

import Graphics.UI.SDL



convSurface s f = do 
  withForeignPtr  s $ \ptr -> (f (castPtr ptr))
 
texVLine :: Int -> Int -> Int -> Surface -> Int -> Int -> Int -> Surface -> IO (())
texVLine a1 a2 a3 a4 a5 a6 a7 a8 =
  let {a1' = fromIntegral a1} in 
  let {a2' = fromIntegral a2} in 
  let {a3' = fromIntegral a3} in 
  convSurface a4 $ \a4' -> 
  let {a5' = fromIntegral a5} in 
  let {a6' = fromIntegral a6} in 
  let {a7' = fromIntegral a7} in 
  convSurface a8 $ \a8' -> 
  texVLine'_ a1' a2' a3' a4' a5' a6' a7' a8' >>= \res ->
  let {res' = id res} in
  return (res')
{-# LINE 25 "CExtras.chs" #-}

texVLineLit :: Int -> Int -> Int -> Surface -> Int -> Int -> Int -> Surface -> Float -> IO (())
texVLineLit a1 a2 a3 a4 a5 a6 a7 a8 a9 =
  let {a1' = fromIntegral a1} in 
  let {a2' = fromIntegral a2} in 
  let {a3' = fromIntegral a3} in 
  convSurface a4 $ \a4' -> 
  let {a5' = fromIntegral a5} in 
  let {a6' = fromIntegral a6} in 
  let {a7' = fromIntegral a7} in 
  convSurface a8 $ \a8' -> 
  let {a9' = realToFrac a9} in 
  texVLineLit'_ a1' a2' a3' a4' a5' a6' a7' a8' a9' >>= \res ->
  let {res' = id res} in
  return (res')
{-# LINE 17 "CExtras.chs" #-}
foreign import ccall unsafe "CExtras.chs.h texturedVLine"
  texVLine'_ :: (CInt -> (CInt -> (CInt -> ((Ptr ()) -> (CInt -> (CInt -> (CInt -> ((Ptr ()) -> (IO ())))))))))

foreign import ccall unsafe "CExtras.chs.h texturedVLineLit"
  texVLineLit'_ :: (CInt -> (CInt -> (CInt -> ((Ptr ()) -> (CInt -> (CInt -> (CInt -> ((Ptr ()) -> (CFloat -> (IO ()))))))))))
